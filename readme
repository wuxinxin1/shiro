关于shiro这个框架的一些测试和spring的集成，shiro的一些基本使用.

shiro认证流程:
1.调用Subject的登陆接口，使用的是(子类)DelegatingSubject.login(AuthenticationToken)
2.使用securityManage的login(Subject var1, AuthenticationToken var2)进行登陆认证操作，其实使用的是子类DefaultSecurityManager进行验证
3.AuthenticatingSecurityManager里面的默认校验器进行校验Authenticator(ModularRealmAuthenticator),调用校验器的 authenticate(AuthenticationToken var1)进行校验。
4.调用ModularRealmAuthenticator(子类进行具体实现的方法，父类都是模板方法)，ModularRealmAuthenticator.doAuthenticate(AuthenticationToken authenticationToken)
5.认证器ModularRealmAuthenticator，去调用AuthenticatingRealm的getAuthenticationInfo(AuthenticationToken var1)接口进行验证
6.调用MyRealm的doGetAuthenticationInfo(AuthenticationToken authenticationToken)获取到数据库中的信息
7.调用AuthenticatingRealm的assertCredentialsMatch(AuthenticationToken token, AuthenticationInfo info) 方法进行token和info的比对
8.调用CredentialsMatcher的doCredentialsMatch(AuthenticationToken var1, AuthenticationInfo var2)进行具体校验
9.CredentialsMatcher主要是去比对密码，用户名在我们自己定义的Realm中已经做过校验了


1.使用的是servlet3.0规范，通过在classpath路径下新建META-INF.service/javax.servlet.ServletContainerInitializer,
来集成spring和springmvc


shiro架构：
subject：认证的主体，相当于一个门面，接收各种认证主体
securityManage:安全管理器，也就是subject(各种认证主题)是把认证信息交给securityManage,由securityManage正真去执行认证的逻辑
                会进行认证，授权，会话，缓存的管理
                a.Authenticator,这是一个认证器，用于对用户信息的认证，通过接口的唯一方法authenticate(AuthenticationToken var1)
                  1.AuthenticationToken是用户填写的认证信息
                  2.聚合组件realms，这是一个集合，有多个Realm,来获取数据库中的用户实体信息(认证信息)
                  3.聚合组件AuthenticationStrategy，这个指定了认证策列，通过检查多个Realm，来确认在几个Realm认证成功情况下，认为认证成功

                b.Authrizer：授权器，或者访问控制器，用来决定主体是否有权限进行相应的操作；即控制着用户能访问应用中的哪些功能；
                  1.securityManage使用默认的ModularRealmAuthorizer
                  2.聚合组件realms，这是一个集合，有多个Realm,来获取数据库中的用户实体信息(授权信息)
                  3.聚合组件PermissionResolver
                  4.聚合组件RolePermissionResolver

                 c.SessionManage:会话管理器，通过会话管理利器，可以管理session的生命周期（包括websession,ejbsession）
                   1.securityManage使用默认的会话管理器DefaultSessionManager
                   2.聚合组件SessionFactory，会话工厂
                   3.聚合组件SessionDAO，用于做session的curd操作
                   4.聚合组件CacheManager，用于做session的缓存管理，来提高效率


Realm：这个是一个安全数据源，及管理着所有的认证数据;比如：认证数据，和授权数据，securityManage在校验认证和授权，都需要去Realm中获取数据


shiro的过滤链:
AbstractShiroFilter->OncePerRequestFilter->NameableFilter->AbstractFilter->Filter
